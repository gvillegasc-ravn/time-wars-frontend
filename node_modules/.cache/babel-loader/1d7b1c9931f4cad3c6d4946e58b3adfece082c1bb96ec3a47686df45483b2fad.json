{"ast":null,"code":"'use client';\n\nimport { useRef, useState, useCallback, useEffect } from 'react';\nimport { useIsomorphicEffect } from '@mantine/hooks';\nfunction setColorSchemeAttribute(colorScheme, getRootElement) {\n  const hasDarkColorScheme = typeof window !== \"undefined\" && \"matchMedia\" in window && window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  const computedColorScheme = colorScheme !== \"auto\" ? colorScheme : hasDarkColorScheme ? \"dark\" : \"light\";\n  getRootElement()?.setAttribute(\"data-mantine-color-scheme\", computedColorScheme);\n}\nfunction useProviderColorScheme({\n  manager,\n  defaultColorScheme,\n  getRootElement,\n  forceColorScheme\n}) {\n  const media = useRef();\n  const [value, setValue] = useState(() => manager.get(defaultColorScheme));\n  const colorSchemeValue = forceColorScheme || value;\n  const setColorScheme = useCallback(colorScheme => {\n    if (!forceColorScheme) {\n      setColorSchemeAttribute(colorScheme, getRootElement);\n      setValue(colorScheme);\n      manager.set(colorScheme);\n    }\n  }, [manager.set, colorSchemeValue, forceColorScheme]);\n  const clearColorScheme = useCallback(() => {\n    setValue(defaultColorScheme);\n    setColorSchemeAttribute(defaultColorScheme, getRootElement);\n    manager.clear();\n  }, [manager.clear, defaultColorScheme]);\n  useEffect(() => {\n    manager.subscribe(setColorScheme);\n    return manager.unsubscribe;\n  }, [manager.subscribe, manager.unsubscribe]);\n  useIsomorphicEffect(() => {\n    setColorSchemeAttribute(manager.get(defaultColorScheme), getRootElement);\n  }, []);\n  useEffect(() => {\n    if (forceColorScheme) {\n      setColorSchemeAttribute(forceColorScheme, getRootElement);\n      return () => {};\n    }\n    if (forceColorScheme === void 0) {\n      setColorSchemeAttribute(value, getRootElement);\n    }\n    if (typeof window !== \"undefined\" && \"matchMedia\" in window) {\n      media.current = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    }\n    const listener = event => {\n      if (value === \"auto\") {\n        setColorSchemeAttribute(event.matches ? \"dark\" : \"light\", getRootElement);\n      }\n    };\n    media.current?.addEventListener(\"change\", listener);\n    return () => media.current?.removeEventListener(\"change\", listener);\n  }, [value, forceColorScheme]);\n  return {\n    colorScheme: colorSchemeValue,\n    setColorScheme,\n    clearColorScheme\n  };\n}\nexport { useProviderColorScheme };","map":{"version":3,"names":["setColorSchemeAttribute","colorScheme","getRootElement","hasDarkColorScheme","window","matchMedia","matches","computedColorScheme","setAttribute","useProviderColorScheme","manager","defaultColorScheme","forceColorScheme","media","useRef","value","setValue","useState","get","colorSchemeValue","setColorScheme","useCallback","set","clearColorScheme","clear","useEffect","subscribe","unsubscribe","useIsomorphicEffect","current","listener","event","addEventListener","removeEventListener"],"sources":["/Users/jackelinequispe/Desktop/time-wars-frontend/node_modules/@mantine/core/src/core/MantineProvider/use-mantine-color-scheme/use-provider-color-scheme.ts"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useIsomorphicEffect } from '@mantine/hooks';\nimport type { MantineColorSchemeManager } from '../color-scheme-managers';\nimport type { MantineColorScheme } from '../theme.types';\n\nfunction setColorSchemeAttribute(\n  colorScheme: MantineColorScheme,\n  getRootElement: () => HTMLElement | undefined\n) {\n  const hasDarkColorScheme =\n    typeof window !== 'undefined' &&\n    'matchMedia' in window &&\n    window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n  const computedColorScheme =\n    colorScheme !== 'auto' ? colorScheme : hasDarkColorScheme ? 'dark' : 'light';\n  getRootElement()?.setAttribute('data-mantine-color-scheme', computedColorScheme);\n}\n\ntype MediaQueryCallback = (event: { matches: boolean; media: string }) => void;\n\ninterface UseProviderColorSchemeOptions {\n  manager: MantineColorSchemeManager;\n  defaultColorScheme: MantineColorScheme;\n  forceColorScheme: 'light' | 'dark' | undefined;\n  getRootElement: () => HTMLElement | undefined;\n}\n\nexport function useProviderColorScheme({\n  manager,\n  defaultColorScheme,\n  getRootElement,\n  forceColorScheme,\n}: UseProviderColorSchemeOptions) {\n  const media = useRef<MediaQueryList>();\n  const [value, setValue] = useState(() => manager.get(defaultColorScheme));\n  const colorSchemeValue = forceColorScheme || value;\n\n  const setColorScheme = useCallback(\n    (colorScheme: MantineColorScheme) => {\n      if (!forceColorScheme) {\n        setColorSchemeAttribute(colorScheme, getRootElement);\n        setValue(colorScheme);\n        manager.set(colorScheme);\n      }\n    },\n    [manager.set, colorSchemeValue, forceColorScheme]\n  );\n\n  const clearColorScheme = useCallback(() => {\n    setValue(defaultColorScheme);\n    setColorSchemeAttribute(defaultColorScheme, getRootElement);\n    manager.clear();\n  }, [manager.clear, defaultColorScheme]);\n\n  useEffect(() => {\n    manager.subscribe(setColorScheme);\n    return manager.unsubscribe;\n  }, [manager.subscribe, manager.unsubscribe]);\n\n  useIsomorphicEffect(() => {\n    setColorSchemeAttribute(manager.get(defaultColorScheme), getRootElement);\n  }, []);\n\n  useEffect(() => {\n    if (forceColorScheme) {\n      setColorSchemeAttribute(forceColorScheme, getRootElement);\n      return () => {};\n    }\n\n    if (forceColorScheme === undefined) {\n      setColorSchemeAttribute(value, getRootElement);\n    }\n\n    if (typeof window !== 'undefined' && 'matchMedia' in window) {\n      media.current = window.matchMedia('(prefers-color-scheme: dark)');\n    }\n\n    const listener: MediaQueryCallback = (event) => {\n      if (value === 'auto') {\n        setColorSchemeAttribute(event.matches ? 'dark' : 'light', getRootElement);\n      }\n    };\n\n    media.current?.addEventListener('change', listener);\n    return () => media.current?.removeEventListener('change', listener);\n  }, [value, forceColorScheme]);\n\n  return { colorScheme: colorSchemeValue, setColorScheme, clearColorScheme };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}