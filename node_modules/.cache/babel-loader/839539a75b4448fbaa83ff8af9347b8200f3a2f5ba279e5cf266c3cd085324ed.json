{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useUncontrolled } from '@mantine/hooks';\nimport 'react';\nimport { getRadius } from '../../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../../core/styles-api/use-styles/use-styles.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { UnstyledButton } from '../../UnstyledButton/UnstyledButton.mjs';\nimport { useCheckboxGroupContext } from '../CheckboxGroup.context.mjs';\nimport { CheckboxCardProvider } from './CheckboxCard.context.mjs';\nimport classes from './CheckboxCard.module.css.mjs';\nconst defaultProps = {\n  withBorder: true\n};\nconst varsResolver = createVarsResolver((_, {\n  radius\n}) => ({\n  card: {\n    \"--card-radius\": getRadius(radius)\n  }\n}));\nconst CheckboxCard = factory((_props, ref) => {\n  const props = useProps(\"CheckboxCard\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    checked,\n    mod,\n    withBorder,\n    value,\n    onClick,\n    defaultChecked,\n    onChange,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"CheckboxCard\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: \"card\"\n  });\n  const ctx = useCheckboxGroupContext();\n  const _checked = typeof checked === \"boolean\" ? checked : ctx?.value.includes(value || \"\") || void 0;\n  const [_value, setValue] = useUncontrolled({\n    value: _checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange\n  });\n  return /* @__PURE__ */jsx(CheckboxCardProvider, {\n    value: {\n      checked: _value\n    },\n    children: /* @__PURE__ */jsx(UnstyledButton, {\n      ref,\n      mod: [{\n        \"with-border\": withBorder,\n        checked: _value\n      }, mod],\n      ...getStyles(\"card\"),\n      ...others,\n      role: \"checkbox\",\n      \"aria-checked\": _value,\n      onClick: event => {\n        onClick?.(event);\n        ctx?.onChange(value || \"\");\n        setValue(!_value);\n      }\n    })\n  });\n});\nCheckboxCard.displayName = \"@mantine/core/CheckboxCard\";\nCheckboxCard.classes = classes;\nexport { CheckboxCard };","map":{"version":3,"names":["defaultProps","withBorder","varsResolver","createVarsResolver","_","radius","card","getRadius","CheckboxCard","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","checked","mod","value","onClick","defaultChecked","onChange","others","getStyles","useStyles","name","classes","rootSelector","ctx","useCheckboxGroupContext","_checked","includes","_value","setValue","useUncontrolled","defaultValue","finalValue","jsx","CheckboxCardProvider","children","UnstyledButton","role","event","displayName"],"sources":["/Users/jackelinequispe/Desktop/time-wars-frontend/node_modules/@mantine/core/src/components/Checkbox/CheckboxCard/CheckboxCard.tsx"],"sourcesContent":["import { useUncontrolled } from '@mantine/hooks';\nimport {\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  MantineRadius,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { UnstyledButton } from '../../UnstyledButton';\nimport { useCheckboxGroupContext } from '../CheckboxGroup.context';\nimport { CheckboxCardProvider } from './CheckboxCard.context';\nimport classes from './CheckboxCard.module.css';\n\nexport type CheckboxCardStylesNames = 'card';\nexport type CheckboxCardCssVariables = {\n  card: '--card-radius';\n};\n\nexport interface CheckboxCardProps\n  extends BoxProps,\n    StylesApiProps<CheckboxCardFactory>,\n    ElementProps<'button', 'onChange'> {\n  /** Controlled component value */\n  checked?: boolean;\n\n  /** Uncontrolled component default value */\n  defaultChecked?: boolean;\n\n  /** Called when value changes */\n  onChange?: (checked: boolean) => void;\n\n  /** Determines whether the card should have border, `true` by default */\n  withBorder?: boolean;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Value of the checkbox, used with `Checkbox.Group` */\n  value?: string;\n}\n\nexport type CheckboxCardFactory = Factory<{\n  props: CheckboxCardProps;\n  ref: HTMLButtonElement;\n  stylesNames: CheckboxCardStylesNames;\n  vars: CheckboxCardCssVariables;\n}>;\n\nconst defaultProps: Partial<CheckboxCardProps> = {\n  withBorder: true,\n};\n\nconst varsResolver = createVarsResolver<CheckboxCardFactory>((_, { radius }) => ({\n  card: {\n    '--card-radius': getRadius(radius),\n  },\n}));\n\nexport const CheckboxCard = factory<CheckboxCardFactory>((_props, ref) => {\n  const props = useProps('CheckboxCard', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    checked,\n    mod,\n    withBorder,\n    value,\n    onClick,\n    defaultChecked,\n    onChange,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<CheckboxCardFactory>({\n    name: 'CheckboxCard',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: 'card',\n  });\n\n  const ctx = useCheckboxGroupContext();\n  const _checked =\n    typeof checked === 'boolean' ? checked : ctx?.value.includes(value || '') || undefined;\n\n  const [_value, setValue] = useUncontrolled({\n    value: _checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange,\n  });\n\n  return (\n    <CheckboxCardProvider value={{ checked: _value }}>\n      <UnstyledButton\n        ref={ref}\n        mod={[{ 'with-border': withBorder, checked: _value }, mod]}\n        {...getStyles('card')}\n        {...others}\n        role=\"checkbox\"\n        aria-checked={_value}\n        onClick={(event) => {\n          onClick?.(event);\n          ctx?.onChange(value || '');\n          setValue(!_value);\n        }}\n      />\n    </CheckboxCardProvider>\n  );\n});\n\nCheckboxCard.displayName = '@mantine/core/CheckboxCard';\nCheckboxCard.classes = classes;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAcA,MAAMA,YAAY,GAAG;EACnBC,UAAU,EAAE;AACd,CAAC;AACD,MAAMC,YAAY,GAAGC,kBAAkB,CAAC,CAACC,CAAC,EAAE;EAAEC;AAAM,CAAE,MAAM;EAC1DC,IAAI,EAAE;IACJ,eAAe,EAAEC,SAAS,CAACF,MAAM;EACrC;AACA,CAAC,CAAC,CAAC;AACS,MAACG,YAAY,GAAGC,OAAO,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;EACnD,MAAMC,KAAK,GAAGC,QAAQ,CAAC,cAAc,EAAEb,YAAY,EAAEU,MAAM,CAAC;EAC5D,MAAM;IACJI,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJC,OAAO;IACPC,GAAG;IACHpB,UAAU;IACVqB,KAAK;IACLC,OAAO;IACPC,cAAc;IACdC,QAAQ;IACR,GAAGC;EACP,CAAG,GAAGd,KAAK;EACT,MAAMe,SAAS,GAAGC,SAAS,CAAC;IAC1BC,IAAI,EAAE,cAAc;IACpBC,OAAO;IACPlB,KAAK;IACLG,SAAS;IACTC,KAAK;IACLF,UAAU;IACVG,MAAM;IACNC,QAAQ;IACRC,IAAI;IACJjB,YAAY;IACZ6B,YAAY,EAAE;EAClB,CAAG,CAAC;EACF,MAAMC,GAAG,GAAGC,uBAAuB,CAAE;EACrC,MAAMC,QAAQ,GAAG,OAAOd,OAAO,KAAK,SAAS,GAAGA,OAAO,GAAGY,GAAG,EAAEV,KAAK,CAACa,QAAQ,CAACb,KAAK,IAAI,EAAE,CAAC,IAAI,KAAK,CAAC;EACpG,MAAM,CAACc,MAAM,EAAEC,QAAQ,CAAC,GAAGC,eAAe,CAAC;IACzChB,KAAK,EAAEY,QAAQ;IACfK,YAAY,EAAEf,cAAc;IAC5BgB,UAAU,EAAE,KAAK;IACjBf;EACJ,CAAG,CAAC;EACF,sBAAuBgB,GAAG,CAACC,oBAAoB,EAAE;IAAEpB,KAAK,EAAE;MAAEF,OAAO,EAAEgB;IAAM,CAAE;IAAEO,QAAQ,iBAAkBF,GAAG,CAC1GG,cAAc,EACd;MACEjC,GAAG;MACHU,GAAG,EAAE,CAAC;QAAE,aAAa,EAAEpB,UAAU;QAAEmB,OAAO,EAAEgB;MAAQ,GAAEf,GAAG,CAAC;MAC1D,GAAGM,SAAS,CAAC,MAAM,CAAC;MACpB,GAAGD,MAAM;MACTmB,IAAI,EAAE,UAAU;MAChB,cAAc,EAAET,MAAM;MACtBb,OAAO,EAAGuB,KAAK,IAAK;QAClBvB,OAAO,GAAGuB,KAAK,CAAC;QAChBd,GAAG,EAAEP,QAAQ,CAACH,KAAK,IAAI,EAAE,CAAC;QAC1Be,QAAQ,CAAC,CAACD,MAAM,CAAC;MACzB;IACA,CACA;EAAG,CAAE,CAAC;AACN,CAAC;AACD5B,YAAY,CAACuC,WAAW,GAAG,4BAA4B;AACvDvC,YAAY,CAACsB,OAAO,GAAGA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}